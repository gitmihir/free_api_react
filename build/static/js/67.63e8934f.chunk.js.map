{"version":3,"file":"static/js/67.63e8934f.chunk.js","mappings":"qLA4CA,MA5CA,WACE,OACE,gBACEA,UAAU,aACVC,GAAG,eACHC,SAAS,KACTC,KAAK,SACL,kBAAgB,oBAChB,cAAY,OAAM,UAElB,gBAAKH,UAAU,eAAeG,KAAK,WAAU,UAC3C,iBAAKH,UAAU,gBAAe,WAC5B,iBAAKA,UAAU,eAAc,WAC3B,eAAIA,UAAU,cAAcC,GAAG,oBAAmB,0BAGlD,mBACEG,KAAK,SACLJ,UAAU,QACV,eAAa,QACb,aAAW,QAAO,UAElB,iBAAM,cAAY,OAAM,wBAG5B,gBAAKA,UAAU,aAAY,kBAC3B,iBAAKA,UAAU,eAAc,WAC3B,mBACEI,KAAK,SACLJ,UAAU,oBACV,eAAa,QAAO,oBAItB,mBAAQI,KAAK,SAASJ,UAAU,kBAAiB,mCAQ7D,ECLA,EAlC4B,SAACK,GAC3B,OAA4BC,EAAAA,EAAAA,UAAS,GAAE,eAAhCC,EAAM,KAAEC,EAAS,KAIxB,OACE,gBAAKR,UAAU,YAAW,UACxB,iBAAKA,UAAU,WAAU,UACtBK,EAAMI,MAAMC,MAAM,EAAGH,GAAQI,KAAI,SAACC,EAAcC,GAC/C,OACE,gBAAKb,UAAU,WAAU,UACvB,iBAAKA,UAAU,yBAAwB,WACrC,gBAAKA,UAAU,cAAa,UAC1B,uBAAIY,EAAaE,UAEnB,iBAAKd,UAAU,YAAW,WACxB,uBAAIY,EAAaG,eACjB,4CAEF,gBAAKf,UAAU,cAAa,SAAEY,EAAaI,gBAThBH,EAanC,KACA,gBAAKb,UAAU,sBAAqB,UAClC,mBAAQA,UAAU,kBAAkBiB,QAvBvB,WACnBT,GAAU,SAACU,GAAS,OAAKA,EAAY,CAAC,GACxC,EAqBkE,0BAI5D,SAACC,EAAK,QAId,E,SCSA,EAzCkB,WAChB,OAAkCb,EAAAA,EAAAA,UAAS,IAAG,eAAvCc,EAAS,KAAEC,EAAY,KAC9B,GAA0Bf,EAAAA,EAAAA,WAAS,GAAM,eAAlCgB,EAAK,KAAEC,EAAQ,KACtB,GAAkCjB,EAAAA,EAAAA,WAAS,GAAK,eAAzCkB,EAAS,KAAEC,EAAY,KA4B9B,OA1BAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAEI,8EAEDC,MAAK,YAAe,IAAZC,EAAI,EAAJA,KACPC,QAAQC,IAAIF,GACZ,IAAMG,EAAiB,GACjBC,EAAQ,gBAEd,IAAK,IAAMC,KAAOL,EAAKM,QACrBH,EAAeI,KAAK,CAClBrB,YAAac,EAAKM,QAAQD,GAAKnB,YAAYsB,QAAQJ,EAAO,IAC1DjB,UAAWa,EAAKM,QAAQD,GAAKlB,UAC7BF,KAAMe,EAAKM,QAAQD,GAAKpB,OAG5BW,GAAa,GACbJ,EAAaW,EACf,IACCM,OAAM,SAACC,GACuB,IAAzBA,EAAMC,QAAQC,QAChBlB,GAAS,EAEb,GACJ,GAAG,KAED,UAAC,EAAAmB,SAAQ,WACNpB,GAAS,6CACRA,IAAUE,GAAaJ,EAAUqB,OAAS,IAC1C,SAAC,EAAmB,CAAChC,MAAOW,IAE7BI,IAAa,SAACmB,EAAA,EAAM,MAG3B,C","sources":["UI/Modal.js","components/VehicleVariableList/VehicleVariableList.js","pages/Variables.js"],"sourcesContent":["function Model() {\n  return (\n    <div\n      className=\"modal fade\"\n      id=\"exampleModal\"\n      tabindex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"exampleModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n              Modal title\n            </h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">...</div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-dismiss=\"modal\"\n            >\n              Close\n            </button>\n            <button type=\"button\" className=\"btn btn-primary\">\n              Save changes\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Model;\n","import { useState } from \"react\";\nimport \"./VehicleVariableList.css\";\nimport Modal from \"../../UI/Modal\";\nconst VehicleVariableList = (props) => {\n  const [offset, setOffset] = useState(6);\n  const loadMoreData = () => {\n    setOffset((prevValue) => prevValue + 6);\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-5\">\n        {props.items.slice(0, offset).map((variableItem, i) => {\n          return (\n            <div className=\"col-md-4\" key={i}>\n              <div className=\"card mt-3 customHeight\">\n                <div className=\"card-header\">\n                  <b>{variableItem.Name}</b>\n                </div>\n                <div className=\"card-body\">\n                  <p>{variableItem.Description}</p>\n                  <p>Read More...</p>\n                </div>\n                <div className=\"card-footer\">{variableItem.GroupName}</div>\n              </div>\n            </div>\n          );\n        })}\n        <div className=\"col-md-12 mt-3 mb-3\">\n          <button className=\"btn btn-success\" onClick={loadMoreData}>\n            Load More\n          </button>\n        </div>\n        <Modal />\n      </div>\n    </div>\n  );\n};\nexport default VehicleVariableList;\n","import axios from \"axios\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport VehicleVariableList from \"../components/VehicleVariableList/VehicleVariableList\";\nimport Loader from \"../UI/Loader\";\nconst Variables = () => {\n  const [Variables, setVariables] = useState([]);\n  const [Error, SetError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    axios\n      .get(\n        \"https://vpic.nhtsa.dot.gov/api/vehicles/getvehiclevariablelist?format=json\"\n      )\n      .then(({ data }) => {\n        console.log(data);\n        const lodedvariables = [];\n        const regex = /(<([^>]+)>)/gi;\n        //const result = data.description.replace(regex, \"\");\n        for (const key in data.Results) {\n          lodedvariables.push({\n            Description: data.Results[key].Description.replace(regex, \"\"),\n            GroupName: data.Results[key].GroupName,\n            Name: data.Results[key].Name,\n          });\n        }\n        setIsLoading(false);\n        setVariables(lodedvariables);\n      })\n      .catch((error) => {\n        if (error.message.length !== 0) {\n          SetError(true);\n        }\n      });\n  }, []);\n  return (\n    <Fragment>\n      {Error && \"Something is Wrong Please try again later\"}\n      {!Error && !isLoading && Variables.length > 0 && (\n        <VehicleVariableList items={Variables} />\n      )}\n      {isLoading && <Loader />}\n    </Fragment>\n  );\n};\nexport default Variables;\n"],"names":["className","id","tabindex","role","type","props","useState","offset","setOffset","items","slice","map","variableItem","i","Name","Description","GroupName","onClick","prevValue","Modal","Variables","setVariables","Error","SetError","isLoading","setIsLoading","useEffect","axios","then","data","console","log","lodedvariables","regex","key","Results","push","replace","catch","error","message","length","Fragment","Loader"],"sourceRoot":""}